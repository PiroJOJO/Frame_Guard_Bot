from aiogram import types, F, Router, Dispatcher
from aiogram.types import Message
from aiogram.filters import Command
from aiogram.enums import ParseMode

import shutil
import os
import config

dp = Dispatcher()

@dp.message(Command("start"))
async def cmd_start(message: types.Message):
    kb = [
        [
            types.KeyboardButton(text="–ó–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ"),
            types.KeyboardButton(text="–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ")
        ],
    ]
    keyboard = types.ReplyKeyboardMarkup(
        keyboard=kb,
        resize_keyboard=True,
        input_field_placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ"
    )
    if os.path.exists('Real_ESRGAN/BSRGAN/testsets/RealSRSet/test.jpg'):
        os.remove('Real_ESRGAN/BSRGAN/testsets/RealSRSet/test.jpg')
    shutil.rmtree('Real_ESRGAN/results')
    os.mkdir('Real_ESRGAN/results')
    await message.answer(f"–ü—Ä–∏–≤–µ—Ç, <b>{message.from_user.full_name}</b>! \n–î–∞–Ω–Ω—ã–π –±–æ—Ç –º–æ–∂–µ—Ç —É–ª—É—á—à–∏—Ç—å –∫–∞—á–µ—Å—Ç–≤–æ —Ç–≤–æ–µ–π —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ —Å –ø–æ–º–æ—â—å—é —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –Ω–µ–π—Ä–æ–Ω–Ω—ã—Ö —Å–µ—Ç–µ–π.‚ú®\n–°–∫–æ—Ä–µ–π –æ—Ç–ø—Ä–∞–≤–ª—è–π —Å–≤–æ—ë –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏ –æ—Ü–µ–Ω–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç!", reply_markup=keyboard, parse_mode=ParseMode.HTML)


@dp.message(F.text == "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ")
async def with_info(message: types.Message):
    await message.answer("–î–∞–Ω–Ω—ã–π –±–æ—Ç —Å–æ–∑–¥–∞–Ω –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ —Ä–∞–±–æ—Ç—ã —Ç–∞–∫–∏—Ö –º–æ–¥–µ–ª–µ–π, –∫–∞–∫: \n \nüîπ BSRGAN \nüîπ Real_ESRGAN, \nüîπ SwinIr \n \n–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –≤ –Ω–∞—á–∞–ª–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞, –∑–∞—Ç–µ–º –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏ –≤—ã–±—Ä–∞—Ç—å –º–æ–¥–µ–ª—å, –∫–æ—Ç–æ—Ä—É—é –í—ã —Ö–æ—Ç–∏—Ç–µ –æ–ø—Ä–æ–±—ã–≤–∞—Ç—å.")

@dp.message(F.text == "–ó–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ")
async def with_start(message: types.Message):
    config.GET_IMAGE = True
    await message.answer("–ó–∞–≥—Ä—É–∑–∏—Ç–µ –ª—é–±–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ", reply_markup=types.ReplyKeyboardRemove())

@dp.message(F.photo)
async def get_photo(message: types.Message):
    if config.GET_IMAGE:
        config.GET_IMAGE = False
        await message.bot.download(file=message.photo[-1].file_id, destination=config.TEST_NAME)
        shutil.move(config.TEST_NAME, config.UPLOAD_PATH)
        kb = [
            [
                types.KeyboardButton(text="BSRGAN"),
                types.KeyboardButton(text="Real-ESRGAN"),
                types.KeyboardButton(text="SwinIR")
            ],
        ]
        keyboard = types.ReplyKeyboardMarkup(
            keyboard=kb,
            resize_keyboard=True,
            input_field_placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥–µ–ª—å"
        )
        await message.answer("–í–∞—à–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–æ. \n–í—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥–µ–ª—å –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏.", reply_markup=keyboard)
    else:
        await message.answer("–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ.")
        


# @dp.message(F.text == "Real-ESRGAN")
# async def with_puree(message: types.Message):
    # cd BSRGAN
    # %python main_test_bsrgan.py
    # %cd ..
    # ESRGAN_main() # chec
    # photo = open(os.path.join(config.RESULT_PATH, config.TEST_NAME), 'rb')
    # await message.send_photo(chat_id=message.chat.id, photo=photo)
    # await message.answer("–î–∞–Ω–Ω—ã–π –±–æ—Ç —Å–æ–∑–¥–∞–Ω –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ —Ä–∞–±–æ—Ç—ã 